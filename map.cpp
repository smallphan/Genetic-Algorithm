#include <ctime>
#include <fstream>
#include <iomanip>
#include <iostream>

// ** TOOL ******************************************************************************** //

namespace TOOL {

    double  // Return a random double from [minV, maxV]
    randDou(
        double minV = 0, 
        double maxV = 1
    ) {
        return minV + (static_cast<double>(rand()) / RAND_MAX) * (maxV - minV);
    }

    int     // Return a random int from [minV, maxV]
    randInt(  // WARNING: Numbers generated by rand() range from 0 to 32767
        int minV = 0,
        int maxV = 1
    ) {
        return minV + rand() % (maxV - minV + 1);
    }
    
}

// ** VARIABLE **************************************************************************** //

const int maxCity = 100;        // Max number of cities
double dis[maxCity][maxCity];   // Distance between cities
int cityNum;                    // Number of cities

// ** FUNCTION **************************************************************************** //

void    // Initialize time seed
Initialize() {
    srand(time(NULL) + 114514);
}

void    // Generate map according to random function
GenerateMap() {
    cityNum = TOOL::randInt(40, 50);
    for (int i = 1; i <= cityNum; i++) {
        for (int j = 1; j < i; j++) {
            dis[i][j] = dis[j][i] = TOOL::randDou(0, 200);
        }
    }
}

bool    // Output map into file and check success
Write() {

    std::fstream file("map.txt", std::ios::out | std::ios::trunc);
    
    if (file.is_open()) {
        file << cityNum << std::endl;
        for (int i = 1; i <= cityNum; i++) {
            for (int j = 1; j <= cityNum; j++) {
                file << std::fixed << std::setprecision(4) << dis[i][j] << ' ';
            } 
            file << std::endl;
        }
        file.close();
        return true;
    } else return false;

}

// ** MAIN ******************************************************************************** //

int main() {
    Initialize();
    GenerateMap();
    if (Write()) puts("Generate map succeed!");
    else puts("Generate map fail.");
    return 0;
}